@jebeshToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNtZ3QydDFjczAwMDA1M3Jwc3lydGxjejMiLCJ1c2VybmFtZSI6ImplYmVzaCIsImlhdCI6MTc2MDU5ODM2MCwiZXhwIjoxNzYwNjg0NzYwfQ.lYwssbU--KN0FrRULSWCKeyBEor67fLXlCzHk5k03qM
@sodaToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNtZ3QydGx6dzAwMDE1M3JwOGcwa2liYTYiLCJ1c2VybmFtZSI6Il9zb2RhIiwiaWF0IjoxNzYwNTk4Mzg3LCJleHAiOjE3NjA2ODQ3ODd9.t7WqRiDHWFDjj3gcq-iamvQ_KND8SZBmj_ho4e-aMh8

### Create user jebesh
POST http://localhost:5000/user/create-user
Content-Type: application/json

{
  "user": {
    "name": "Jebesh",
    "username": "jebesh",
    "email": "jebesh67@gmail.com",
    "password": "jebesh123"
  }
}

### Create user soda
POST http://localhost:5000/user/create-user
Content-Type: application/json

{
  "user": {
    "name": "SodaPop",
    "username": "_soda",
    "email": "sodaeleven@gmail.com",
    "password": "soda123"
  }
}

### Create new user with invaild email and password
POST http://localhost:5000/user/create-user
Content-Type: application/json

{
  "user": {
    "username": "jebesh",
    "email": "jebesh67mail.com",
    "password": "jebes"
  }
}

### Login with valid user
POST http://localhost:5000/user/login
Content-Type: application/json

{
  "user": {
    "username": "jebesh",
    "password": "jebesh123"
  }
}

### Login with invalid username
POST http://localhost:5000/user/login
Content-Type: application/json

{
  "user": {
    "username": "jebesh11",
    "password": "jebesh123"
  }
}

### Login with wong password
POST http://localhost:5000/user/login
Content-Type: application/json

{
  "user": {
    "username": "jebesh",
    "password": "jebesh127773"
  }
}

### Get other user
GET http://localhost:5000/user/get/jebesh
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

### Get current user
GET http://localhost:5000/user/current-user
Content-Type: application/json
Authorization: Bearer {{sodaToken}}

### Get invalid user
GET http://localhost:5000/user/get/jebeshasfsaf
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

### Get user with wrong token
GET http://localhost:5000/user/get/jebesh
Content-Type: application/json
Authorization: Bearer sagsdagasg

### logout
POST http://localhost:5000/user/logout
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}


### Test graphql
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

{
  "query": "query { getCurrentUser { user { name, id, createdAt, updatedAt } } }"
}
