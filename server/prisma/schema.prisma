// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  username String  @unique
  email    String
  password String
  avatar   String? @default("")

  posts    Post[]
  comments Comment[]
  messages Message[]
  chats    ChatParticipant[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id       String    @id @default(cuid())
  content  String
  image    String?
  authorId String
  author   User      @relation(fields: [authorId], references: [id])
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id       String @id @default(cuid())
  text     String
  postId   String
  authorId String

  post   Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id           String            @id @default(cuid())
  participants ChatParticipant[]
  messages     Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChatParticipant {
  id     String @id @default(cuid())
  userId String
  chatId String

  user User @relation(fields: [userId], references: [id])
  chat Chat @relation(fields: [chatId], references: [id])

  @@unique([userId, chatId])
}

model Message {
  id       String @id @default(cuid())
  text     String
  senderId String
  chatId   String

  sender User @relation(fields: [senderId], references: [id])
  chat   Chat @relation(fields: [chatId], references: [id])

  createdAt DateTime @default(now())
}
