@jebeshToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNtZ3VsZ3VtODAwMDE1M3cwN3llaWJmamkiLCJ1c2VybmFtZSI6ImplYmVzaCIsImlhdCI6MTc2MDY5MDE3MCwiZXhwIjoxNzYxMjk0OTcwfQ.VwQ4DbOgCkiwN7Z4tp6Z5OZebDdMu_8l8iEgTPxD0P0
@sodaToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNtZ3VsZzk1ZTAwMDA1M3cwdTdqcjZ2d28iLCJ1c2VybmFtZSI6Il9zb2RhIiwiaWF0IjoxNzYwNjkwMTQzLCJleHAiOjE3NjEyOTQ5NDN9.NDdsWLt0-qMPE9M5cU1tAhXzMaQ5XY9YvBAE8b7U5ho
@lemonToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNtZ3VsaDVuZzAwMDI1M3cweHRobHFtaGsiLCJ1c2VybmFtZSI6ImxlbW9uMjIiLCJpYXQiOjE3NjA2OTAxODUsImV4cCI6MTc2MTI5NDk4NX0.s8T-G4jAodri1JDzKNxEvdJYsOsGVsy03TTE7NZB1Ks

### Create user jebesh
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: CreateUserInput!) { createUser(createUserInput: $input) { user { name, username, email, id }, token } }",
  "variables": {
    "input": {
      "name": "Jebesh",
      "username": "jebesh",
      "email": "jebesh67@gmail.com",
      "password": "jebesh123"
    }
  }
}

### Create user soda
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: CreateUserInput!) { createUser(createUserInput: $input) { user { name, username, email, id }, token } }",
  "variables": {
    "input": {
      "name": "SodaPop",
      "username": "_soda",
      "email": "sodaeleven@gmail.com",
      "password": "soda123"
    }
  }
}

### Create user lemon
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: CreateUserInput!) { createUser(createUserInput: $input) { user { name, username, email, id }, token } }",
  "variables": {
    "input": {
      "name": "lemon",
      "username": "lemon22",
      "email": "lemon67@gmail.com",
      "password": "lemon123"
    }
  }
}


### Create new user with invaild email and password
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: CreateUserInput!) { createUser(createUserInput: $input) { user { name, username, email, id }, token } }",
  "variables": {
    "input": {
      "name": "lalala",
      "username": "jebesh",
      "email": "jebesh67mail.com",
      "password": "jebes"
    }
  }
}


### Login with valid user
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: LoginUserInput!) { loginUser(loginUserInput: $input) { user { name, username, id }, token } }",
  "variables": {
    "input": {
      "username": "jebesh",
      "password": "jebesh123"
    }
  }
}


### Login with invalid username
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: LoginUserInput!) { loginUser(loginUserInput: $input) { user { name, username, id }, token } }",
  "variables": {
    "input": {
      "username": "jebesh11",
      "password": "jebesh123"
    }
  }
}


### Login with wong password
POST http://localhost:5000/graphql
Content-Type: application/json

{
  "query": "mutation($input: LoginUserInput!) { loginUser(loginUserInput: $input) { user { name, username, id }, token } }",
  "variables": {
    "input": {
      "username": "jebesh",
      "password": "jebesh127773"
    }
  }
}


### Get other user
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

{
  "query": "query($username: String!) { otherUserProfile(username: $username) { user { username, name, email, id, createdAt, updatedAt } } }",
  "variables": {
    "username": "_soda"
  }
}


### Get current user
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer {{sodaToken}}

{
  "query": "query { currentUser { user { username, name, email, id, createdAt, updatedAt }, token } }"
}



### Get invalid user
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

{
  "query": "query($username: String!) { otherUserProfile(username: $username) { user { username } } }",
  "variables": {
    "username": "jebeshasfsaf"
  }
}


### Get user with wrong token
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer sagsdagasg

{
  "query": "query { currentUser { user { username, id } } }"
}


### logout
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

{
  "query": "mutation { logoutUser }"
}



### Test graphql
POST http://localhost:5000/graphql
Content-Type: application/json
Authorization: Bearer {{jebeshToken}}

{
  "query": "query { currentUser { user { name, id, createdAt, updatedAt } } }"
}
